<mvc:View
	controllerName="com.sap.gtt.app.sample.sof.controller.ExecutionFlow"
	xmlns:mvc="sap.ui.core.mvc"
	xmlns:core="sap.ui.core"
	xmlns:m="sap.m"
	xmlns="sap.suite.ui.commons"
	height="100%">
	<m:HBox justifyContent="End" renderType="Bare">
		<m:items>
			<m:Button icon="sap-icon://zoom-in" press=".onZoomIn" type="Transparent"/>
			<m:Button icon="sap-icon://zoom-out" press=".onZoomOut" type="Transparent"/>
		</m:items>
	</m:HBox>
	<ProcessFlow
		id="processflow"
		class="sofProcessFlow"
		scrollable="false"
		wheelZoomable="false"
		foldedCorners="false"
		nodePress=".onNodePressed"
		lanes="{executionFlow>/lanes}"
		nodes="{path: 'executionFlow>/nodes', templateShareable: false}">
		<lanes>
			<ProcessFlowLaneHeader
				laneId="{executionFlow>eventId}"
				iconSrc="{path: 'executionFlow>eventType', formatter: '.formatter.eventType.getIcon'}"
				text="{path: 'executionFlow>', formatter: '.formatter.eventTypeLocationDescription'}"
				position="{executionFlow>position}"/>
		</lanes>
		<nodes>
			<ProcessFlowNode
				id="processFlowNode"
				laneId="{executionFlow>eventId}"
				nodeId="{executionFlow>eventId}"
				state="{path: 'executionFlow>eventStatus', formatter: '.formatter.eventStatus.getProcessFlowNodeState'}"
				children="{executionFlow>children}">
				<customData>
					<core:CustomData key="eventStatus" value="{executionFlow>eventStatus}" writeToDom="true"/>
				</customData>
				<zoomLevelOneContent>
					<m:VBox renderType="Bare">
						<m:ObjectStatus id="levelOneEventStatus" visible="{= !!${executionFlow>eventStatus} }" class="sofProcessFlowNodeEventStatus sapUiTinyMarginBottom" text="{path: 'executionFlow>eventStatus', formatter: '.formatter.eventStatusText'}" state="{path: 'executionFlow>eventStatus', formatter: '.formatter.eventStatus.getState'}"/>

						<m:Label id="levelOnePlannedAtLabel" class="sofProcessFlowNodeLabel" visible="{= !!${executionFlow>plannedAt} }" text="{i18n>plannedAt}:" labelFor="levelOnePlannedAt"/>
						<m:Text id="levelOnePlannedAt" class="sofProcessFlowNodeValue sapUiTinyMarginBottom" visible="{= !!${executionFlow>plannedAt} }" text="{path: 'executionFlow>plannedAt', type: 'com.sap.gtt.app.sample.sof.model.type.ISODateTime'}"/>

						<m:ObjectStatus id="levelOneETA" visible="{= !!${executionFlow>eta} }" class="sofProcessFlowNodeETA sapUiTinyMarginBottom" text="{path: 'executionFlow>eta', type: 'com.sap.gtt.app.sample.sof.model.type.ISODateTime', formatter: '.getETAText'}" state="{path: 'executionFlow>eventStatus', formatter: '.formatter.eventStatus.getETAState'}"/>

						<m:Label id="levelOneActualAtLabel" class="sofProcessFlowNodeLabel" visible="{= !!${executionFlow>actualAt} }" text="{i18n>actualAt}:" labelFor="levelOneActualAt"/>
						<m:Text id="levelOneActualAt" class="sofProcessFlowNodeValue" visible="{= !!${executionFlow>actualAt} }" text="{path: 'executionFlow>actualAt', type: 'com.sap.gtt.app.sample.sof.model.type.ISODateTime'}"/>
					</m:VBox>
				</zoomLevelOneContent>
				<zoomLevelTwoContent>
					<m:VBox renderType="Bare">
						<m:ObjectStatus id="levelTwoEventStatus" visible="{= !!${executionFlow>eventStatus} }" class="sapUiTinyMarginBottom" text="{path: 'executionFlow>eventStatus', formatter: '.formatter.eventStatusText'}" state="{path: 'executionFlow>eventStatus', formatter: '.formatter.eventStatus.getState'}"/>

						<m:Label id="levelTwoPlannedAtLabel" class="sofProcessFlowNodeLabel" text="{i18n>plannedAt}:" visible="{= !!${executionFlow>plannedAt} }" labelFor="levelTwoPlannedAt"/>
						<m:Text id="levelTwoPlannedAt" class="sofProcessFlowNodeValue sapUiTinyMarginBottom" visible="{= !!${executionFlow>plannedAt} }" text="{path: 'executionFlow>plannedAt', type: 'com.sap.gtt.app.sample.sof.model.type.ISODateTime'}"/>

						<m:ObjectStatus id="levelTwoETA" visible="{= !!${executionFlow>eta} }" class="sofProcessFlowNodeETA sapUiTinyMarginBottom" text="{path: 'executionFlow>eta', type: 'com.sap.gtt.app.sample.sof.model.type.ISODateTime', formatter: '.getETAText'}" state="{path: 'executionFlow>eventStatus', formatter: '.formatter.eventStatus.getETAState'}"/>

						<m:Label id="levelTwoActualAtLabel" class="sofProcessFlowNodeLabel" visible="{= !!${executionFlow>actualAt} }" text="{i18n>actualAt}:" labelFor="levelTwoActualAt"/>
						<m:Text id="levelTwoActualAt" class="sofProcessFlowNodeValue" visible="{= !!${executionFlow>actualAt} }" text="{path: 'executionFlow>actualAt', type: 'com.sap.gtt.app.sample.sof.model.type.ISODateTime'}"/>
					</m:VBox>
				</zoomLevelTwoContent>
				<zoomLevelThreeContent>
					<m:VBox renderType="Bare">
						<m:ObjectStatus id="levelThreeEventStatus" visible="{= !!${executionFlow>eventStatus} }" class="sapUiTinyMarginBottom" text="{path: 'executionFlow>eventStatus', formatter: '.formatter.eventStatusText'}" state="{path: 'executionFlow>eventStatus', formatter: '.formatter.eventStatus.getState'}"/>

						<m:Label id="levelThreePlannedAtLabel" class="sofProcessFlowNodeLabel" visible="{= !!${executionFlow>plannedAt} }" text="{i18n>plannedAt}:" labelFor="levelThreePlannedAt"/>
						<m:Text id="levelThreePlannedAt" class="sofProcessFlowNodeValue" visible="{= !!${executionFlow>plannedAt} }" text="{path: 'executionFlow>plannedAt', type: 'com.sap.gtt.app.sample.sof.model.type.ISODateTime'}"/>
					</m:VBox>
				</zoomLevelThreeContent>
				<zoomLevelFourContent>
					<m:VBox renderType="Bare">
						<m:ObjectStatus id="LevelFourEventStatus" visible="{= !!${executionFlow>eventStatus} }" class="sofProcessFlowNodeEventStatus sapUiTinyMarginBottom" text="{path: 'executionFlow>eventStatus', formatter: '.formatter.eventStatusText'}" state="{path: 'executionFlow>eventStatus', formatter: '.formatter.eventStatus.getState'}"/>
					</m:VBox>
				</zoomLevelFourContent>
			</ProcessFlowNode>
		</nodes>
	</ProcessFlow>
</mvc:View>
