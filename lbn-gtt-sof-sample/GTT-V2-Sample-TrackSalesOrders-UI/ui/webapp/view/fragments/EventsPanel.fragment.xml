<core:FragmentDefinition
	xmlns="sap.m"
	xmlns:layout="sap.ui.layout"
	xmlns:form="sap.ui.layout.form"
	xmlns:suite="sap.suite.ui.commons"
	xmlns:core="sap.ui.core"
	xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1">
	<Panel id="panel" class="sapUiNoContentPadding sofSideContentTitlePadding"
		visible="{= !${map>/showDetails} }"
		busy="{map>/timeLineBusy}"
		busyIndicatorDelay="0">
		<headerToolbar>
			<Toolbar class="sofSideContentTitlePadding">
				<Title id="title" text="{i18n>routeInformationTitle}"/>
				<ToolbarSpacer/>
				<Button id="closeButton" icon="sap-icon://decline" type="Transparent" tooltip="{i18n>close}" press=".closeSideContent"/>
			</Toolbar>
		</headerToolbar>
		<content>
			<layout:FixFlex id="fixFlex" class="fixFlexVertical" minFlexSize="800">
				<layout:fixContent>
					<form:SimpleForm id="form"
						editable="false"
						layout="ResponsiveGridLayout"
						labelSpanXL="4"
						labelSpanL="3"
						labelSpanM="4"
						labelSpanS="12"
						adjustLabelSpan="true"
						emptySpanXL="0"
						emptySpanL="4"
						emptySpanM="0"
						emptySpanS="0"
						columnsXL="2"
						columnsL="1"
						columnsM="1"
						singleContainerFullSize="false">
						<form:content>
							<Label labelFor="processId" text="{i18n>processId}"/>
							<Text id="processId" text="{map>/selectedRoute/groupId}"/>
						</form:content>
					</form:SimpleForm>
					<Title id="eventTitle" class="sofTimelineTitle" level="H3" text="{i18n>events}"/>
				</layout:fixContent>
				<layout:flexContent>
					<suite:Timeline id="timeline"
						showHeaderBar="false"
						showIcons="true"
						enableDoubleSided="true"
						groupBy="Date"
						growingThreshold="0"
						filterTitle=""
						sortOldestFirst="true"
						content="{map>/selectedEvents}">
						<suite:content>
							<suite:TimelineItem
								id="timelineItemOfRoute"
								status="{path: 'map>eventStatusCode', formatter: '.formatter.timelineItemStatus'}"
								icon="{path: 'map>eventType', formatter: '.formatter.eventType.getIcon'}"
								userName="{path: 'map>eventType', formatter: '.formatter.eventTypeText'}">
								<suite:embeddedControl>
									<VBox>
										<items>
											<ObjectStatus visible="{map>isPlannedEvent}" text="{path: 'map>eventStatusCode', formatter: '.formatter.eventStatusText'}" state="{path: 'map>eventStatusCode', formatter: '.formatter.eventStatus.getState'}" class="sapUiTinyMarginBottom"/>
											<ObjectAttribute class="sapUiTinyMarginBottom"
												title="{i18n>location}"
												text="{= ${map>location} ? ${map>location/locationDescription} : ${map>locationAltKey} }"
												active="{= !!${map>location} }"
												press=".openLocationQuickView"
												customData:modelName="map"
												customData:propertyName="location"/>
											<ObjectAttribute class="sapUiTinyMarginBottom"
												title="{i18n>plannedAt}"
												text="{path: 'map>plannedBusinessTimestamp', type: 'com.sap.gtt.app.sample.sof.model.type.ISODateTime'}"
												active="false"
												visible="{map>isPlannedEvent}"/>
											<ObjectAttribute class="sapUiTinyMarginBottom"
												title="{i18n>actualAt}"
												text="{path: 'map>actualBusinessTimestamp', type: 'com.sap.gtt.app.sample.sof.model.type.ISODateTime'}"
												active="false"/>
											<HBox>
												<Link id="viewEventDetailLink"
													visible="{= ${map>isPlannedEvent} &amp;&amp; ${map>isActualEvent} }"
													text="{i18n>details}"
													class="sapUiSmallMarginEnd"
													press=".showHistoricalReporting"/>
												<Link id="viewImpactAnalysisLink"
													visible="{= ${map>eventStatusCode} === 'DELAYED'}"
													text="{i18n>viewImpactAnalysis}"
													class="sapUiSmallMarginEnd"
													press=".showImpactAnalysis(${map>plannedEventId})" />
											</HBox>
										</items>
									</VBox>
								</suite:embeddedControl>
							</suite:TimelineItem>
						</suite:content>
					</suite:Timeline>
				</layout:flexContent>
			</layout:FixFlex>
		</content>
	</Panel>
</core:FragmentDefinition>
