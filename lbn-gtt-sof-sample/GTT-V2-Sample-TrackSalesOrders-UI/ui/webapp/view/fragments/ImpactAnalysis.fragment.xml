<core:FragmentDefinition xmlns:m="sap.m"
	xmlns="sap.suite.ui.commons.networkgraph"
	xmlns:layout="sap.suite.ui.commons.networkgraph.layout"
	xmlns:core="sap.ui.core">
	<m:Dialog title="{i18n>impactAnalysis}"
		afterOpen="initImpactAnalysis">
		<Graph id="impactAnalysisGraph"
			busy="{= ${impactAnalysis>/isLoaded} !== true}"
			enableWheelZoom="false"
			nodes="{impactAnalysis>/nodes}"
			lines="{impactAnalysis>/lines}">
			<layoutData>
				<m:FlexItemData minWidth="75%"
					maxWidth="75%" />
			</layoutData>
			<nodes>
				<Node class="sofImpactAnalysisNode"
					key="{impactAnalysis>id}"
					title="{
						parts: [
							'impactAnalysis>group',
							'impactAnalysis>title'
						],
						formatter: '.formatter.networkGraphNodeTitle'
					}"
					titleLineSize="0"
					icon="{
						path: 'impactAnalysis>group',
						formatter: '.formatter.networkGraphGroupNodeIcon'
					}"
					attributes="{
						path: 'impactAnalysis>attributes',
						templateShareable: true
					}"
					status="{impactAnalysis>status}"
					showActionLinksButton="false"
					collapseExpand=".expandPressed(${$source>})"
					press=".updateImpactAnalysis(
						${$source>},
						${impactAnalysis>id},
						${impactAnalysis>trackingIdType}
					)">
					<attributes>
						<ElementAttribute id="elementAttribute"
							label="{
								path: 'impactAnalysis>',
								formatter: '.formatter.networkGraphNodeAttributeLabel'
							}"
							value="{
								path: 'impactAnalysis>',
								formatter: '.formatter.networkGraphNodeAttributeValue'
							}"
							labelStatus="{
								path: 'impactAnalysis>valueStatus',
								formatter: '.formatter.networkGraphGroupStatus'
							}"
							valueStatus="{
								path: 'impactAnalysis>valueStatus',
								formatter: '.formatter.networkGraphGroupStatus'
							}" />
					</attributes>
				</Node>
			</nodes>
			<lines>
				<Line from="{impactAnalysis>from}"
					to="{impactAnalysis>to}"
					status="{impactAnalysis>status}">
				</Line>
			</lines>
		</Graph>

		<m:beginButton>
			<m:Button text="{i18n>close}"
				press=".hideImpactAnalysis" />
		</m:beginButton>
	</m:Dialog>
</core:FragmentDefinition>
